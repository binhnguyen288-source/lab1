ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB68:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE BEGIN PV */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/main.c **** void SystemClock_Config(void);
  49:Core/Src/main.c **** static void MX_GPIO_Init(void);
  50:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** #define SEG_a GPIO_PIN_0
  58:Core/Src/main.c **** #define SEG_b GPIO_PIN_1
  59:Core/Src/main.c **** #define SEG_c GPIO_PIN_2
  60:Core/Src/main.c **** #define SEG_d GPIO_PIN_3
  61:Core/Src/main.c **** #define SEG_e GPIO_PIN_4
  62:Core/Src/main.c **** #define SEG_f GPIO_PIN_5
  63:Core/Src/main.c **** #define SEG_g GPIO_PIN_6
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** void display7SEG(int num) {
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   static const uint16_t ALL_SEGS = 0x7f;
  69:Core/Src/main.c ****   
  70:Core/Src/main.c ****   static const uint16_t LUT_SET[] = {
  71:Core/Src/main.c ****     SEG_g,                                // 0
  72:Core/Src/main.c ****     ALL_SEGS &~ (SEG_b | SEG_c),          // 1
  73:Core/Src/main.c ****     SEG_c | SEG_f,                        // 2
  74:Core/Src/main.c ****     SEG_e | SEG_f,                        // 3
  75:Core/Src/main.c ****     SEG_a | SEG_d | SEG_e,                // 4
  76:Core/Src/main.c ****     SEG_b | SEG_e,                        // 5
  77:Core/Src/main.c ****     SEG_b,                                // 6
  78:Core/Src/main.c ****     ALL_SEGS &~ (SEG_a | SEG_b | SEG_c),  // 7
  79:Core/Src/main.c ****     0,                                    // 8
  80:Core/Src/main.c ****     SEG_e                                 // 9
  81:Core/Src/main.c ****   };
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   const uint16_t SET_SEGS = LUT_SET[num];
  84:Core/Src/main.c ****   
  85:Core/Src/main.c ****   GPIOB->BSRR = SET_SEGS | ((uint32_t)(ALL_SEGS & ~SET_SEGS) << 16u);
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** }
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /* USER CODE END 0 */
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s 			page 3


  91:Core/Src/main.c **** /**
  92:Core/Src/main.c ****   * @brief  The application entry point.
  93:Core/Src/main.c ****   * @retval int
  94:Core/Src/main.c ****   */
  95:Core/Src/main.c **** int main(void)
  96:Core/Src/main.c **** {
  97:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END 1 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 104:Core/Src/main.c ****   HAL_Init();
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END Init */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Configure the system clock */
 111:Core/Src/main.c ****   SystemClock_Config();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END SysInit */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Initialize all configured peripherals */
 118:Core/Src/main.c ****   MX_GPIO_Init();
 119:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 120:Core/Src/main.c ****   int counter = 0;
 121:Core/Src/main.c ****   /* USER CODE END 2 */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* Infinite loop */
 124:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 125:Core/Src/main.c ****   while (1)
 126:Core/Src/main.c ****   {
 127:Core/Src/main.c ****     if (counter >= 10) counter = 0;
 128:Core/Src/main.c ****     display7SEG(counter++);
 129:Core/Src/main.c ****     HAL_Delay(1000);
 130:Core/Src/main.c ****     /* USER CODE END WHILE */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 133:Core/Src/main.c ****   }
 134:Core/Src/main.c ****   /* USER CODE END 3 */
 135:Core/Src/main.c **** }
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** /**
 138:Core/Src/main.c ****   * @brief System Clock Configuration
 139:Core/Src/main.c ****   * @retval None
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c **** void SystemClock_Config(void)
 142:Core/Src/main.c **** {
 143:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 147:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s 			page 4


 148:Core/Src/main.c ****   */
 149:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 154:Core/Src/main.c ****   {
 155:Core/Src/main.c ****     Error_Handler();
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 162:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 168:Core/Src/main.c ****   {
 169:Core/Src/main.c ****     Error_Handler();
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c **** }
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /**
 174:Core/Src/main.c ****   * @brief GPIO Initialization Function
 175:Core/Src/main.c ****   * @param None
 176:Core/Src/main.c ****   * @retval None
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c **** static void MX_GPIO_Init(void)
 179:Core/Src/main.c **** {
  26              		.loc 1 179 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
 180:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 180 3 view .LVU1
  40              		.loc 1 180 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0294     		str	r4, [sp, #8]
  43 0008 0394     		str	r4, [sp, #12]
  44 000a 0494     		str	r4, [sp, #16]
  45 000c 0594     		str	r4, [sp, #20]
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 183:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  46              		.loc 1 183 3 is_stmt 1 view .LVU3
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s 			page 5


  47              	.LBB4:
  48              		.loc 1 183 3 view .LVU4
  49              		.loc 1 183 3 view .LVU5
  50 000e 0E4B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F00802 		orr	r2, r2, #8
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 183 3 view .LVU6
  55 0018 9B69     		ldr	r3, [r3, #24]
  56 001a 03F00803 		and	r3, r3, #8
  57 001e 0193     		str	r3, [sp, #4]
  58              		.loc 1 183 3 view .LVU7
  59 0020 019B     		ldr	r3, [sp, #4]
  60              	.LBE4:
  61              		.loc 1 183 3 view .LVU8
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 186:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  62              		.loc 1 186 3 view .LVU9
  63 0022 0A4D     		ldr	r5, .L3+4
  64 0024 2246     		mov	r2, r4
  65 0026 7F21     		movs	r1, #127
  66 0028 2846     		mov	r0, r5
  67 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
  68              	.LVL0:
 187:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6, GPIO_PIN_RESET);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 190:Core/Src/main.c ****                            PB4 PB5 PB6 */
 191:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  69              		.loc 1 191 3 view .LVU10
  70              		.loc 1 191 23 is_stmt 0 view .LVU11
  71 002e 7F23     		movs	r3, #127
  72 0030 0293     		str	r3, [sp, #8]
 192:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6;
 193:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  73              		.loc 1 193 3 is_stmt 1 view .LVU12
  74              		.loc 1 193 24 is_stmt 0 view .LVU13
  75 0032 0123     		movs	r3, #1
  76 0034 0393     		str	r3, [sp, #12]
 194:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  77              		.loc 1 194 3 is_stmt 1 view .LVU14
  78              		.loc 1 194 24 is_stmt 0 view .LVU15
  79 0036 0494     		str	r4, [sp, #16]
 195:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  80              		.loc 1 195 3 is_stmt 1 view .LVU16
  81              		.loc 1 195 25 is_stmt 0 view .LVU17
  82 0038 0223     		movs	r3, #2
  83 003a 0593     		str	r3, [sp, #20]
 196:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  84              		.loc 1 196 3 is_stmt 1 view .LVU18
  85 003c 02A9     		add	r1, sp, #8
  86 003e 2846     		mov	r0, r5
  87 0040 FFF7FEFF 		bl	HAL_GPIO_Init
  88              	.LVL1:
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** }
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s 			page 6


  89              		.loc 1 198 1 is_stmt 0 view .LVU19
  90 0044 07B0     		add	sp, sp, #28
  91              	.LCFI2:
  92              		.cfi_def_cfa_offset 12
  93              		@ sp needed
  94 0046 30BD     		pop	{r4, r5, pc}
  95              	.L4:
  96              		.align	2
  97              	.L3:
  98 0048 00100240 		.word	1073876992
  99 004c 000C0140 		.word	1073810432
 100              		.cfi_endproc
 101              	.LFE68:
 103              		.section	.text.display7SEG,"ax",%progbits
 104              		.align	1
 105              		.global	display7SEG
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 110              	display7SEG:
 111              	.LVL2:
 112              	.LFB65:
  65:Core/Src/main.c **** 
 113              		.loc 1 65 27 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
  68:Core/Src/main.c ****   
 118              		.loc 1 68 3 view .LVU21
  70:Core/Src/main.c ****     SEG_g,                                // 0
 119              		.loc 1 70 3 view .LVU22
  83:Core/Src/main.c ****   
 120              		.loc 1 83 3 view .LVU23
  83:Core/Src/main.c ****   
 121              		.loc 1 83 18 is_stmt 0 view .LVU24
 122 0000 054B     		ldr	r3, .L6
 123 0002 33F81020 		ldrh	r2, [r3, r0, lsl #1]
 124              	.LVL3:
  85:Core/Src/main.c **** 
 125              		.loc 1 85 3 is_stmt 1 view .LVU25
  85:Core/Src/main.c **** 
 126              		.loc 1 85 51 is_stmt 0 view .LVU26
 127 0006 D343     		mvns	r3, r2
  85:Core/Src/main.c **** 
 128              		.loc 1 85 62 view .LVU27
 129 0008 1B04     		lsls	r3, r3, #16
 130 000a 03F4FE03 		and	r3, r3, #8323072
  85:Core/Src/main.c **** 
 131              		.loc 1 85 26 view .LVU28
 132 000e 1A43     		orrs	r2, r2, r3
 133              	.LVL4:
  85:Core/Src/main.c **** 
 134              		.loc 1 85 15 view .LVU29
 135 0010 024B     		ldr	r3, .L6+4
 136 0012 1A61     		str	r2, [r3, #16]
  87:Core/Src/main.c **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s 			page 7


 137              		.loc 1 87 1 view .LVU30
 138 0014 7047     		bx	lr
 139              	.L7:
 140 0016 00BF     		.align	2
 141              	.L6:
 142 0018 00000000 		.word	.LANCHOR0
 143 001c 000C0140 		.word	1073810432
 144              		.cfi_endproc
 145              	.LFE65:
 147              		.section	.text.Error_Handler,"ax",%progbits
 148              		.align	1
 149              		.global	Error_Handler
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 154              	Error_Handler:
 155              	.LFB69:
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /* USER CODE END 4 */
 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** /**
 205:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 206:Core/Src/main.c ****   * @retval None
 207:Core/Src/main.c ****   */
 208:Core/Src/main.c **** void Error_Handler(void)
 209:Core/Src/main.c **** {
 156              		.loc 1 209 1 is_stmt 1 view -0
 157              		.cfi_startproc
 158              		@ Volatile: function does not return.
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 210:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 211:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 212:Core/Src/main.c ****   __disable_irq();
 162              		.loc 1 212 3 view .LVU32
 163              	.LBB5:
 164              	.LBI5:
 165              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s 			page 8


  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s 			page 9


  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s 			page 10


 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 166              		.loc 2 140 27 view .LVU33
 167              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 168              		.loc 2 142 3 view .LVU34
 169              		.syntax unified
 170              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 171 0000 72B6     		cpsid i
 172              	@ 0 "" 2
 173              		.thumb
 174              		.syntax unified
 175              	.L9:
 176              	.LBE6:
 177              	.LBE5:
 213:Core/Src/main.c ****   while (1)
 178              		.loc 1 213 3 discriminator 1 view .LVU35
 214:Core/Src/main.c ****   {
 215:Core/Src/main.c ****   }
 179              		.loc 1 215 3 discriminator 1 view .LVU36
 213:Core/Src/main.c ****   while (1)
 180              		.loc 1 213 9 discriminator 1 view .LVU37
 181 0002 FEE7     		b	.L9
 182              		.cfi_endproc
 183              	.LFE69:
 185              		.section	.text.SystemClock_Config,"ax",%progbits
 186              		.align	1
 187              		.global	SystemClock_Config
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	SystemClock_Config:
 193              	.LFB67:
 142:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 194              		.loc 1 142 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 64
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 00B5     		push	{lr}
 199              	.LCFI3:
 200              		.cfi_def_cfa_offset 4
 201              		.cfi_offset 14, -4
 202 0002 91B0     		sub	sp, sp, #68
 203              	.LCFI4:
 204              		.cfi_def_cfa_offset 72
 143:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 205              		.loc 1 143 3 view .LVU39
 143:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s 			page 11


 206              		.loc 1 143 22 is_stmt 0 view .LVU40
 207 0004 2822     		movs	r2, #40
 208 0006 0021     		movs	r1, #0
 209 0008 06A8     		add	r0, sp, #24
 210 000a FFF7FEFF 		bl	memset
 211              	.LVL5:
 144:Core/Src/main.c **** 
 212              		.loc 1 144 3 is_stmt 1 view .LVU41
 144:Core/Src/main.c **** 
 213              		.loc 1 144 22 is_stmt 0 view .LVU42
 214 000e 0023     		movs	r3, #0
 215 0010 0193     		str	r3, [sp, #4]
 216 0012 0293     		str	r3, [sp, #8]
 217 0014 0393     		str	r3, [sp, #12]
 218 0016 0493     		str	r3, [sp, #16]
 219 0018 0593     		str	r3, [sp, #20]
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 220              		.loc 1 149 3 is_stmt 1 view .LVU43
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 221              		.loc 1 149 36 is_stmt 0 view .LVU44
 222 001a 0223     		movs	r3, #2
 223 001c 0693     		str	r3, [sp, #24]
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 224              		.loc 1 150 3 is_stmt 1 view .LVU45
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 225              		.loc 1 150 30 is_stmt 0 view .LVU46
 226 001e 0123     		movs	r3, #1
 227 0020 0A93     		str	r3, [sp, #40]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 228              		.loc 1 151 3 is_stmt 1 view .LVU47
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 229              		.loc 1 151 41 is_stmt 0 view .LVU48
 230 0022 1023     		movs	r3, #16
 231 0024 0B93     		str	r3, [sp, #44]
 152:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 232              		.loc 1 152 3 is_stmt 1 view .LVU49
 153:Core/Src/main.c ****   {
 233              		.loc 1 153 3 view .LVU50
 153:Core/Src/main.c ****   {
 234              		.loc 1 153 7 is_stmt 0 view .LVU51
 235 0026 06A8     		add	r0, sp, #24
 236 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 237              	.LVL6:
 153:Core/Src/main.c ****   {
 238              		.loc 1 153 6 view .LVU52
 239 002c 68B9     		cbnz	r0, .L14
 160:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 240              		.loc 1 160 3 is_stmt 1 view .LVU53
 160:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 241              		.loc 1 160 31 is_stmt 0 view .LVU54
 242 002e 0F23     		movs	r3, #15
 243 0030 0193     		str	r3, [sp, #4]
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 244              		.loc 1 162 3 is_stmt 1 view .LVU55
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 245              		.loc 1 162 34 is_stmt 0 view .LVU56
 246 0032 0021     		movs	r1, #0
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s 			page 12


 247 0034 0291     		str	r1, [sp, #8]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 248              		.loc 1 163 3 is_stmt 1 view .LVU57
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 249              		.loc 1 163 35 is_stmt 0 view .LVU58
 250 0036 0391     		str	r1, [sp, #12]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 251              		.loc 1 164 3 is_stmt 1 view .LVU59
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 252              		.loc 1 164 36 is_stmt 0 view .LVU60
 253 0038 0491     		str	r1, [sp, #16]
 165:Core/Src/main.c **** 
 254              		.loc 1 165 3 is_stmt 1 view .LVU61
 165:Core/Src/main.c **** 
 255              		.loc 1 165 36 is_stmt 0 view .LVU62
 256 003a 0591     		str	r1, [sp, #20]
 167:Core/Src/main.c ****   {
 257              		.loc 1 167 3 is_stmt 1 view .LVU63
 167:Core/Src/main.c ****   {
 258              		.loc 1 167 7 is_stmt 0 view .LVU64
 259 003c 01A8     		add	r0, sp, #4
 260 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 261              	.LVL7:
 167:Core/Src/main.c ****   {
 262              		.loc 1 167 6 view .LVU65
 263 0042 20B9     		cbnz	r0, .L15
 171:Core/Src/main.c **** 
 264              		.loc 1 171 1 view .LVU66
 265 0044 11B0     		add	sp, sp, #68
 266              	.LCFI5:
 267              		.cfi_remember_state
 268              		.cfi_def_cfa_offset 4
 269              		@ sp needed
 270 0046 5DF804FB 		ldr	pc, [sp], #4
 271              	.L14:
 272              	.LCFI6:
 273              		.cfi_restore_state
 155:Core/Src/main.c ****   }
 274              		.loc 1 155 5 is_stmt 1 view .LVU67
 275 004a FFF7FEFF 		bl	Error_Handler
 276              	.LVL8:
 277              	.L15:
 169:Core/Src/main.c ****   }
 278              		.loc 1 169 5 view .LVU68
 279 004e FFF7FEFF 		bl	Error_Handler
 280              	.LVL9:
 281              		.cfi_endproc
 282              	.LFE67:
 284              		.section	.text.main,"ax",%progbits
 285              		.align	1
 286              		.global	main
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 291              	main:
 292              	.LFB66:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s 			page 13


 293              		.loc 1 96 1 view -0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297 0000 10B5     		push	{r4, lr}
 298              	.LCFI7:
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 4, -8
 301              		.cfi_offset 14, -4
 104:Core/Src/main.c **** 
 302              		.loc 1 104 3 view .LVU70
 303 0002 FFF7FEFF 		bl	HAL_Init
 304              	.LVL10:
 111:Core/Src/main.c **** 
 305              		.loc 1 111 3 view .LVU71
 306 0006 FFF7FEFF 		bl	SystemClock_Config
 307              	.LVL11:
 118:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 308              		.loc 1 118 3 view .LVU72
 309 000a FFF7FEFF 		bl	MX_GPIO_Init
 310              	.LVL12:
 120:Core/Src/main.c ****   /* USER CODE END 2 */
 311              		.loc 1 120 3 view .LVU73
 120:Core/Src/main.c ****   /* USER CODE END 2 */
 312              		.loc 1 120 7 is_stmt 0 view .LVU74
 313 000e 0024     		movs	r4, #0
 314 0010 07E0     		b	.L18
 315              	.LVL13:
 316              	.L21:
 127:Core/Src/main.c ****     display7SEG(counter++);
 317              		.loc 1 127 8 view .LVU75
 318 0012 2046     		mov	r0, r4
 319              	.L17:
 320              	.LVL14:
 128:Core/Src/main.c ****     HAL_Delay(1000);
 321              		.loc 1 128 5 is_stmt 1 view .LVU76
 322 0014 441C     		adds	r4, r0, #1
 323              	.LVL15:
 128:Core/Src/main.c ****     HAL_Delay(1000);
 324              		.loc 1 128 5 is_stmt 0 view .LVU77
 325 0016 FFF7FEFF 		bl	display7SEG
 326              	.LVL16:
 129:Core/Src/main.c ****     /* USER CODE END WHILE */
 327              		.loc 1 129 5 is_stmt 1 view .LVU78
 328 001a 4FF47A70 		mov	r0, #1000
 329 001e FFF7FEFF 		bl	HAL_Delay
 330              	.LVL17:
 125:Core/Src/main.c ****   {
 331              		.loc 1 125 9 view .LVU79
 332              	.L18:
 125:Core/Src/main.c ****   {
 333              		.loc 1 125 3 view .LVU80
 127:Core/Src/main.c ****     display7SEG(counter++);
 334              		.loc 1 127 5 view .LVU81
 127:Core/Src/main.c ****     display7SEG(counter++);
 335              		.loc 1 127 8 is_stmt 0 view .LVU82
 336 0022 092C     		cmp	r4, #9
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s 			page 14


 337 0024 F5DD     		ble	.L21
 127:Core/Src/main.c ****     display7SEG(counter++);
 338              		.loc 1 127 32 view .LVU83
 339 0026 0020     		movs	r0, #0
 340 0028 F4E7     		b	.L17
 341              		.cfi_endproc
 342              	.LFE66:
 344              		.section	.rodata.LUT_SET.0,"a"
 345              		.align	2
 346              		.set	.LANCHOR0,. + 0
 349              	LUT_SET.0:
 350 0000 4000     		.short	64
 351 0002 7900     		.short	121
 352 0004 2400     		.short	36
 353 0006 3000     		.short	48
 354 0008 1900     		.short	25
 355 000a 1200     		.short	18
 356 000c 0200     		.short	2
 357 000e 7800     		.short	120
 358 0010 0000     		.short	0
 359 0012 1000     		.short	16
 360              		.text
 361              	.Letext0:
 362              		.file 3 "c:\\stm32toolchain\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-ea
 363              		.file 4 "c:\\stm32toolchain\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-ea
 364              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 365              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 366              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 367              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 368              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 369              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 370              		.file 11 "<built-in>"
ARM GAS  C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s:98     .text.MX_GPIO_Init:00000048 $d
C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s:104    .text.display7SEG:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s:110    .text.display7SEG:00000000 display7SEG
C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s:142    .text.display7SEG:00000018 $d
C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s:148    .text.Error_Handler:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s:154    .text.Error_Handler:00000000 Error_Handler
C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s:186    .text.SystemClock_Config:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s:192    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s:285    .text.main:00000000 $t
C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s:291    .text.main:00000000 main
C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s:345    .rodata.LUT_SET.0:00000000 $d
C:\Users\nguye\AppData\Local\Temp\ccCRMS8M.s:349    .rodata.LUT_SET.0:00000000 LUT_SET.0

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
